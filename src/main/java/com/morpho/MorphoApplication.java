package com.morpho;

import com.morpho.config.MorphoConfiguration;
import com.morpho.resources.AppResourcesMethods;
import com.morpho.resources.AppResourcesPages;
import com.morpho.server.DBAdministrator;
import com.morpho.health.MongoHealthCheck;
import com.morpho.server.SearchEngine;
import io.dropwizard.assets.AssetsBundle;

import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;
import io.dropwizard.Application;

import com.mongodb.MongoClient;

import java.util.logging.*;

/**
 * Created by Irvin Uma√±a on 29/4/2017.
 * General configuration class for the entire application running dropwizard.
 */
public class MorphoApplication extends Application<MorphoConfiguration>{
    public static DBAdministrator DBA;
    public static Authenticator Auth;
    public static SearchEngine searcher;

    public static Logger logger;
    private static FileHandler fHandler;
    private static SimpleFormatter sFormatter;

    public static void main(String[] args) throws Exception {
        fHandler = new FileHandler("MorphoSpace.log");
        sFormatter = new SimpleFormatter();
        logger = Logger.getLogger("MorphoApplication");

        fHandler.setFormatter(sFormatter);
        logger.addHandler(fHandler);
        logger.setLevel(Level.INFO);

        new MorphoApplication().run(args);
    }

    @Override
    public String getName() {
        return "morpho";
    }

    /**
     * Setting up the assets folder as public to allow serving different resources such
     * as JavaScript, CSS, and Image files.
     * @param theConfig configuration object generated by the config.yml.
     */
    @Override
    public void initialize(Bootstrap<MorphoConfiguration> theConfig) {

        theConfig.addBundle(new AssetsBundle("/assets"));
    }

    /**
     * Begin executing the application. Sets registration of different resources,
     * and sets up configurations for the database and the authentication.
     * @param configuration configuration object generated by the config.yml.
     * @param environment provided the by the Resftul environment.
     */
    @Override
    public void run(MorphoConfiguration configuration,
                    Environment environment) {


        final MongoClient mongoClient = new MongoClient(configuration.mongohost, configuration.mongoport);
        final MongoHealthCheck mongoHealthCheck = new MongoHealthCheck(mongoClient);

        DBA = new DBAdministrator(mongoClient);
        Auth = new Authenticator();
        searcher = new SearchEngine();

        AppResourcesPages resourcesPages = new AppResourcesPages();
        AppResourcesMethods resourcesMethods = new AppResourcesMethods(DBA);

        environment.healthChecks().register("MongoDBHealthCheck", mongoHealthCheck);
        environment.jersey().register(resourcesPages);
        environment.jersey().register(resourcesMethods);

        //dbaExample(DBA); //ejemplo
    }

    /*Ejemplo de consultas
    private void dbaExample(DBAdministrator dba) {
        dba.insert("pieza", "{_id: 1, ownerID: 21, isPublic: true, size: {w: 100, h: 100}, site: \"foo.com/pic.png\"}");
        dba.replace("pieza", "{_id: 1}", "{$set: {isPublic: false}, $rename: {site: \"url\"}}"); //hay que usar update operators
        dba.delete("pieza", "{_id: 1}");
    }*/
}
